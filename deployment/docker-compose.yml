# =============================================================================
# Docker Compose configuration for HackerFolio-Tulio
# Optimized for Bun + React 19 + Vite + Elysia + SQLite stack
# =============================================================================

services:
  # Main application service
  app:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
      target: production
    container_name: hackerfolio-tulio
    ports:
      - '${PORT:-3001}:3001'
    environment:
      # Application configuration
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=3001

      # Database configuration (SQLite file-based)
      - DATABASE_URL=/app/database/portfolio.db

      # Security configuration
      - SESSION_SECRET=${SESSION_SECRET:-generate-secure-secret-32-chars-min}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3001}

      # Performance settings
      - BUN_INSTALL_CACHE_DIR=/tmp/.bun-install
      - BUN_BUILD_CACHE_DIR=/tmp/.bun-build

      # Feature flags
      - FEATURE_GITHUB_INTEGRATION=${FEATURE_GITHUB_INTEGRATION:-true}
      - FEATURE_TERMINAL_LOGGING=${FEATURE_TERMINAL_LOGGING:-true}
      - FEATURE_ANALYTICS=${FEATURE_ANALYTICS:-false}

      # GitHub API configuration (optional)
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - GITHUB_API_TIMEOUT=${GITHUB_API_TIMEOUT:-30000}

      # Rate limiting
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-100}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}

      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-json}

    # Volume mount for SQLite database persistence
    volumes:
      - sqlite_data:/app/database
      # Optional: Mount for custom environment file
      # - ./.env:/app/.env:ro

    # Network configuration
    networks:
      - app_network

    # Health check configuration
    healthcheck:
      test: ['CMD', 'bun', 'run', 'health-check']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # Restart policy for production reliability
    restart: unless-stopped

    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

    # Logging configuration
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

# Named volumes for data persistence
volumes:
  # SQLite database storage
  sqlite_data:
    driver: local

# Network configuration
networks:
  app_network:
    driver: bridge
    name: hackerfolio_network
