{
  "name": "hackerfolio-tulio",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev:server": "bun --hot server/app.ts",
    "dev:client": "vite --config vite.config.ts",
    "dev": "concurrently -k -n server,client -c green,cyan \"bun run dev:server\" \"bun run dev:client\"",
    "dev:enhanced": "bun run server/scripts/dev-workflow.ts",
    "dev:hmr": "bun run server/scripts/hmr-coordinator.ts",
    "dev:full": "concurrently -k -n workflow,hmr -c blue,cyan \"bun run dev:enhanced\" \"bun run dev:hmr\"",
    "build": "bun run build:client && bun run build:server",
    "build:client": "NODE_ENV=development vite build --config vite.config.ts",
    "build:server": "NODE_ENV=development vite build --config vite.config.ts --ssr",
    "build:full": "bun run check:prod && bun run build",
    "build:clean": "rm -rf dist coverage .vite && bun run build",
    "build:production": "NODE_ENV=production bun run build",
    "build:production:full": "NODE_ENV=production bun run build:full",
    "build:analyze": "bun run build && npx vite-bundle-analyzer dist/public",
    "lighthouse": "lhci autorun",
    "clean": "rm -rf dist coverage .vite tmp node_modules/.cache",
    "start": "bun run env:validate && bun server/app.ts",
    "start:production": "NODE_ENV=production bun run start",
    "preview": "bun run build && bun run start:production",
    "preview:client": "vite preview --config vite.config.ts",
    "serve": "bun run start:production",
    "serve:client": "vite preview --config vite.config.ts --port 4173",
    "test": "vitest",
    "test:run": "vitest run",
    "test:watch": "vitest --watch",
    "test:coverage": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "check:types": "tsc --noEmit",
    "check:lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "check:lint:prod": "eslint . --ext .js,.jsx,.ts,.tsx --ignore-pattern '**/__tests__/**' --ignore-pattern '**/*.test.*' --ignore-pattern '**/*.spec.*' --ignore-pattern 'server/scripts/**' --max-warnings 200",
    "check:format": "prettier --check .",
    "check:all": "bun run check:types && bun run check:lint && bun run check:format && bun run test:run",
    "check:prod": "bun run check:types && bun run check:lint:prod && bun run check:format",
    "fix:lint": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "fix:format": "prettier --write .",
    "fix:all": "bun run fix:format && bun run fix:lint",
    "db:generate": "drizzle-kit generate --config=drizzle.config.ts",
    "db:migrate": "bun server/db/migrate.ts",
    "db:studio": "drizzle-kit studio --config=drizzle.config.ts",
    "db:push": "drizzle-kit push --config=drizzle.config.ts",
    "db:drop": "drizzle-kit drop --config=drizzle.config.ts",
    "db:introspect": "drizzle-kit introspect --config=drizzle.config.ts",
    "db:cli": "sqlite3 database/portfolio.db",
    "env:validate": "bun run server/scripts/validate-env.ts",
    "env:example": "cp .env.example .env",
    "env:help": "echo 'Environment Configuration Help:\n\n1. Copy .env.example to .env: bun run env:example\n2. Edit .env with your values\n3. Validate configuration: bun run env:validate\n4. See .env.example for all available options'",
    "config:validate": "bun run server/scripts/validate-build-config.ts",
    "config:check": "bun run config:validate",
    "config:integration": "bun run server/scripts/validate-config-integration.ts",
    "config:paths": "bun run server/scripts/validate-path-mappings.ts",
    "config:build": "bun run server/scripts/standardize-build-outputs.ts",
    "config:test": "bun run server/scripts/test-config-matrix.ts",
    "prod:security": "bun run server/scripts/production-hardening.ts",
    "deploy:generate": "bun run server/scripts/generate-deployment-configs.ts",
    "deploy:setup": "bun run deploy:generate && echo 'Deployment configurations generated. Check deployment/ directory for platform-specific configs.'",
    "health-check": "curl -f http://localhost:3001/health || exit 1"
  },
  "dependencies": {
    "@elysiajs/cors": "^1.3.3",
    "@elysiajs/static": "^1.3.0",
    "@tabler/icons-react": "^3.34.1",
    "@tanstack/history": "^1.131.2",
    "@tanstack/react-router": "^1.131.28",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "drizzle-orm": "^0.44.5",
    "drizzle-zod": "^0.8.3",
    "elysia": "^1.3.20",
    "lucide-react": "^0.542.0",
    "motion": "^12.23.12",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "tailwind-merge": "^3.3.1",
    "zod": "^4.1.4"
  },
  "devDependencies": {
    "@eslint/js": "^9.34.0",
    "@tailwindcss/postcss": "^4.1.12",
    "@tailwindcss/typography": "^0.5.16",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@total-typescript/ts-reset": "^0.6.1",
    "@types/bun": "^1.2.21",
    "@types/eslint-plugin-jsx-a11y": "^6.10.0",
    "@types/node": "^24.3.0",
    "@types/react": "~19.1.12",
    "@types/react-dom": "^19.1.8",
    "@typescript-eslint/eslint-plugin": "^8.41.0",
    "@typescript-eslint/parser": "^8.41.0",
    "@vitejs/plugin-react": "^5.0.2",
    "@vitest/coverage-v8": "^3.2.4",
    "autoprefixer": "^10.4.21",
    "concurrently": "^9.2.1",
    "drizzle-kit": "^0.31.4",
    "eslint": "^9.34.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "jsdom": "^26.1.0",
    "knip": "^5.63.0",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "tailwindcss": "^4.1.12",
    "tailwindcss-animate": "^1.0.7",
    "typescript": "^5.9.2",
    "typescript-eslint": "^8.41.0",
    "vite": "^7.1.3",
    "vitest": "^3.2.4"
  },
  "trustedDependencies": [
    "@getgrit/cli",
    "@tailwindcss/oxide",
    "unrs-resolver"
  ]
}
