# =============================================================================
# HackerFolio-Tulio Environment Configuration
# =============================================================================
# Copy this file to .env and update the values according to your environment
# All values shown are defaults unless marked as REQUIRED

# =============================================================================
# APPLICATION CORE CONFIGURATION
# =============================================================================

# Environment Mode (development|production|test)
# This affects security, logging, and performance settings
NODE_ENV=development

# Server Port - Must match Vite proxy configuration in development
# Default: 3001 (development), 8000 (Koyeb production)
PORT=3001

# Application URLs - REQUIRED for production
# Base URL for the application (used for CORS and links)
# APP_URL=https://yourdomain.com
# API_URL=https://api.yourdomain.com

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database Connection URL
# Development: Uses SQLite file (default: ./portfolio.db)
# Production: Should use hosted database (PostgreSQL/MySQL recommended)
# DATABASE_URL=file:./portfolio.db
# DATABASE_URL=postgresql://user:password@localhost:5432/portfolio
# DATABASE_URL=mysql://user:password@localhost:3306/portfolio

# Database Connection Pool Settings
# Minimum connections in pool
DB_POOL_MIN=2
# Maximum connections in pool
DB_POOL_MAX=10

# =============================================================================
# EXTERNAL API INTEGRATION
# =============================================================================

# GitHub API Configuration
# Token for GitHub API access (for fetching commit history, repos)
# Get from: https://github.com/settings/tokens
# GITHUB_TOKEN=ghp_your_github_personal_access_token_here

# GitHub API request timeout (milliseconds)
GITHUB_API_TIMEOUT=30000

# GitHub API cache duration (seconds)
GITHUB_CACHE_DURATION=300

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS Origins - REQUIRED for production
# Comma-separated list of allowed origins
# Development default: http://localhost:5173
# CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# Session Secret - REQUIRED for production
# Generate with: openssl rand -base64 32
# SESSION_SECRET=your_secure_session_secret_here_minimum_32_characters

# Content Security Policy Report URI
# CSP_REPORT_URI=https://yourdomain.com/api/csp-report

# CSP Report Only Mode (true=report violations, false=block violations)
CSP_REPORT_ONLY=false

# Rate Limiting Configuration
# Maximum requests per window
RATE_LIMIT_REQUESTS=100
# Rate limit window duration (milliseconds) - default 15 minutes
RATE_LIMIT_WINDOW_MS=900000

# =============================================================================
# PERFORMANCE & CACHING
# =============================================================================

# Static Asset Cache Duration (seconds) - default 24 hours
STATIC_CACHE_DURATION=86400

# API Response Caching
API_CACHE_ENABLED=true
# API cache duration (seconds) - default 5 minutes
API_CACHE_DURATION=300

# Enable Gzip/Brotli Compression
ENABLE_COMPRESSION=true

# =============================================================================
# LOGGING & MONITORING
# =============================================================================

# Log Level (error|warn|info|debug)
# Production should use 'info' or 'warn'
LOG_LEVEL=info

# Log Format (json|pretty)
# Use 'json' for production, 'pretty' for development
LOG_FORMAT=pretty

# Log HTTP Requests
LOG_REQUESTS=true

# Sentry Error Tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Debug Mode - Extra logging and development features
# Should be false in production
DEBUG=false

# Development Watch Paths (comma-separated)
# Additional paths to watch for hot reload
# DEV_WATCH_PATHS=./shared,./server/lib

# Mock GitHub API in Development
# Set to true to use mock data instead of real GitHub API
MOCK_GITHUB_API=false

# =============================================================================
# BUILD & DEPLOYMENT
# =============================================================================

# Build Output Directory
BUILD_DIR=dist

# Static Files Directory
STATIC_DIR=public

# Health Check Endpoint Path
HEALTH_CHECK_ENDPOINT=/health

# Health Check Timeout (milliseconds)
HEALTH_CHECK_TIMEOUT=5000

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# GitHub Integration Features
# Enables commit history fetching and repository integration
FEATURE_GITHUB_INTEGRATION=true

# Terminal Command Logging
# Logs terminal commands to database for analytics
FEATURE_TERMINAL_LOGGING=true

# Analytics Features
# Enables user interaction tracking and analytics
FEATURE_ANALYTICS=false

# =============================================================================
# PLATFORM-SPECIFIC CONFIGURATION
# =============================================================================

# Railway Deployment Settings
# RAILWAY_STATIC_URL=https://yourdomain.railway.app
# RAILWAY_PROJECT_ID=your-project-id

# Heroku Deployment Settings
# HEROKU_APP_NAME=your-app-name
# HEROKU_POSTGRESQL_URL=postgres://user:pass@host:port/db

# Vercel Deployment Settings (requires serverless functions)
# VERCEL_URL=https://your-project.vercel.app
# VERCEL_ENV=production

# =============================================================================
# ENVIRONMENT VALIDATION
# =============================================================================
# The following variables are automatically validated:
#
# REQUIRED IN PRODUCTION:
# - APP_URL (must be valid URL)
# - API_URL (must be valid URL)  
# - SESSION_SECRET (minimum 32 characters)
# - CORS_ORIGINS (comma-separated URLs)
#
# OPTIONAL BUT RECOMMENDED:
# - GITHUB_TOKEN (for full GitHub integration)
# - SENTRY_DSN (for error tracking)
# - DATABASE_URL (for persistent database)
#
# To validate your configuration, run:
#   bun run env:validate
#
# To get configuration help, run:
#   bun run env:help
# =============================================================================